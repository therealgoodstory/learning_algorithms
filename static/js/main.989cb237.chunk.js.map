{"version":3,"sources":["redux/reducers/test.js","redux/reducers/index.js","redux/index.js","App.tsx","reportWebVitals.ts","components/BinarySearch.tsx","index.tsx"],"names":["UPDATE_STATE","initialState","id","Test","state","action","type","new","createRootReducer","history","combineReducers","router","connectRouter","test","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnchanters","compose","applyMiddleware","store","createStore","App","className","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BinarySearch","useState","result","setResult","x","setX","arr","Array","fill","map","_","onChange","e","Number","target","value","onClick","low","high","length","middle","Math","floor","counter","Main","exact","path","render","document","getElementById","ReactDOM"],"mappings":"iSAAMA,EAAe,eAEfC,EAAe,CACnBC,IAAK,GAwBQC,MArBF,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKN,EACH,OAAO,2BACFI,GADL,IAEEF,GAAIG,EAAOE,MAGf,QACE,OAAOH,ICLEI,EANW,SAACC,GAAD,OACxBC,0BAAgB,CACdC,OAAQC,YAAcH,GACtBI,UCASJ,EAAUK,cAEjBC,EAAa,CAACC,IAAOC,YAAiBR,IAMtCS,EAH6EC,UAG7C,WAAX,GACzBC,kBAAe,WAAf,EAAmBL,IADM,OAFT,KAaHM,EANDC,sBACZd,EAAkBC,GAXC,GAanBS,G,eCVaK,EAVH,WACV,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,iBAApC,8BCQSE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCqDCQ,G,MA1DM,WAAO,IAAD,EACGC,mBAAS,IADZ,mBAClBC,EADkB,KACVC,EADU,OAEPF,mBAAS,GAFF,mBAElBG,EAFkB,KAEfC,EAFe,KAInBC,EAAM,IAAIC,MAAM,KAAUC,KAAK,GAAGC,KAAI,SAACC,EAAG3C,GAAJ,OAAWA,EAAK,KAwB5D,OACE,uBAAMsB,UAAU,YAAhB,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,iBAAvB,oBAIF,0BAASA,UAAU,OAAnB,UACE,qBAAIA,UAAU,cAAd,wCAC6B,uBAD7B,2BAGA,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,aAAhB,uFAGA,sBAAKA,UAAU,QAAf,UACE,uBAAOlB,KAAK,SAASwC,SAAU,SAACC,GAAD,OAAOP,EAAKQ,OAAOD,EAAEE,OAAOC,SAAS1B,UAAU,iBAC9E,wBAAQlB,KAAK,SAAS6C,QAvChB,WAMd,IALA,IAAIC,EAAM,EACNC,EAAQZ,EAAIa,OAAS,EACrBC,EAASC,KAAKC,OAAOL,EAAMC,GAAQ,GACnCK,EAAU,EAEPnB,IAAME,EAAIc,KACfA,EAASC,KAAKC,OAAOL,EAAMC,GAAQ,GACnCK,GAAW,EACPnB,EAAIE,EAAIc,KAAWH,EAAMG,GACzBhB,EAAIE,EAAIc,KAAWF,EAAOE,KAC1BhB,EAAIE,EAAIW,IAAQb,EAAIE,EAAIY,OAI1Bd,EAAIE,EAAIW,IAAQb,EAAIE,EAAIY,GAC1Bf,EAAU,4JAEVA,EAAU,gGAAD,OAAsBoB,EAAtB,wDAqBqClC,UAAU,gBAAlD,kDAKJ,sBAAMA,UAAU,eAAhB,SACGa,YC3CLsB,EAAO,kBACX,cAAC,IAAD,CAAUtC,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAiBZ,QAASA,EAA1B,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,OACpC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,iBAAiBC,OAAQ,kBAAM,cAAC,EAAD,iBAOrDb,EAASc,SAASC,eAAe,QAEvCC,IAASH,OAAO,cAAC,EAAD,IAAUb,GAK1BvB,M","file":"static/js/main.989cb237.chunk.js","sourcesContent":["const UPDATE_STATE = \"UPDATE_STATE\";\n\nconst initialState = {\n  id: -1,\n};\n\nconst Test = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_STATE: {\n      return {\n        ...state,\n        id: action.new,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport function updateState() {\n  return (dispatch, getState) => {\n    const { id } = getState().sidebar;\n    const result = id * -1;\n    dispatch({ type: UPDATE_STATE, new: result });\n  };\n}\n\nexport default Test;","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport test from \"./test\";\n\nconst createRootReducer = (history) => (\n  combineReducers({\n    router: connectRouter(history),\n    test,\n  })\n)\nexport default createRootReducer;","import { createStore, compose, applyMiddleware } from \"redux\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport createRootReducer from \"./reducers\";\n\nexport const history = createBrowserHistory();\n\nconst middleware = [thunk, routerMiddleware(history)];\nconst initialState = {};\n\nconst composeFunc = process.env.NODE_ENV === \"development\" ? composeWithDevTools : compose;\nconst enhancers = []\n\nconst composedEnchanters = composeFunc(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nconst store = createStore(\n  createRootReducer(history),\n  initialState,\n  composedEnchanters,\n);\n\nexport default store;","import { Link } from 'react-router-dom'\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Link to=\"/binary-search\" className=\"main-nav__link\">\n        Binary Search\n      </Link>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../styles/binarySearch.css'\n\nconst BinarySearch = () => {\n  const [result, setResult] = useState(\"\")\n  const [x, setX] = useState(0)\n\n  const arr = new Array(10000000).fill(0).map((_, id) => id + 1)\n\n  const onClick = () => {\n    let low = 0\n    let high =  arr.length - 1\n    let middle = Math.floor((low + high) / 2)\n    let counter = 0\n  \n    while (x !== arr[middle]) {\n      middle = Math.floor((low + high) / 2)\n      counter += 1\n      if (x > arr[middle]) { low = middle }\n      if (x < arr[middle]) { high = middle }\n      if (x < arr[low] || x > arr[high]) {\n        break\n      }\n    }\n    if (x < arr[low] || x > arr[high]) {\n      setResult('Введённое число отсутствует')\n    } else {\n      setResult(`Число найденно за ${counter} итераций!`)\n    }\n  }\n\n  return (\n    <main className=\"container\">\n      <nav className=\"main-nav\">\n        <Link to=\"/\" className=\"main-nav__link\">\n          HOME\n        </Link>\n      </nav>\n      <section className=\"main\">\n        <h1 className=\"main__title\">\n          Binary search for a number <br /> from 0 to 10 000 000\n        </h1>\n        <div className=\"main__container\">\n          <span className=\"main__text\">\n            Введите число\n          </span>\n          <div className=\"panel\">\n            <input type=\"number\" onChange={(e) => setX(Number(e.target.value))} className=\"panel__input\" />\n            <button type=\"button\" onClick={onClick} className=\"panel__button\">\n              Поиск\n            </button>\n          </div>\n        </div>\n        <span className=\"main__result\">\n          {result}\n        </span>\n      </section>\n    </main>\n  );\n}\n\nexport default BinarySearch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { Route, Switch } from \"react-router\";\nimport { HashRouter } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport './index.css';\nimport store, { history } from \"./redux\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport BinarySearch from './components/BinarySearch';\n\nconst Main = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => <App />} />\n          <Route exact path=\"/binary-search\" render={() => <BinarySearch />} />\n        </Switch>\n      </HashRouter>\n    </ConnectedRouter>\n  </Provider>\n);\n\nconst target = document.getElementById(\"root\");\n\nReactDOM.render(<Main />, target);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}